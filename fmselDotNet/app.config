<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="TFMM.My.MySettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
        </sectionGroup>
        <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="TFMM.My.MySettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
        </sectionGroup>
    </configSections>
    <system.diagnostics>
        <sources>
            <!-- This section defines the logging configuration for My.Application.Log -->
            <source name="DefaultSource" switchName="DefaultSwitch">
                <listeners>
                    <add name="FileLog"/>
                    <!-- Uncomment the below section to write to the Application Event Log -->
                    <!--<add name="EventLog"/>-->
                </listeners>
            </source>
        </sources>
        <switches>
            <add name="DefaultSwitch" value="Information" />
        </switches>
        <sharedListeners>
            <add name="FileLog"
                 type="Microsoft.VisualBasic.Logging.FileLogTraceListener, Microsoft.VisualBasic, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL"
                 initializeData="FileLogWriter"/>
            <!-- Uncomment the below section and replace APPLICATION_NAME with the name of your application to write to the Application Event Log -->
            <!--<add name="EventLog" type="System.Diagnostics.EventLogTraceListener" initializeData="APPLICATION_NAME"/> -->
        </sharedListeners>
    </system.diagnostics>
    <applicationSettings>
        <TFMM.My.MySettings>
            <setting name="CreateTableFMFiles" serializeAs="String">
                <value>CREATE TABLE If NOT EXISTS FMFiles (Filename varchar(255), FileSize INT, MissionName varchar(255), ThiefVersion varchar(255), Author varchar(255), ReleaseDate DATE, Directory varchar(255), InstallFolder varchar(255), Hash varchar(255))</value>
            </setting>
            <setting name="CreateTableInfoFiles" serializeAs="String">
                <value>CREATE TABLE IF NOT EXISTS InfoFiles (FMFilesId INT, Filename varchar(255), Content BLOB)</value>
            </setting>
            <setting name="CreateTriggerFMDelete" serializeAs="String">
                <value>CREATE TRIGGER IF NOT EXISTS FMDelete AFTER DELETE ON FMFiles FOR EACH ROW BEGIN DELETE FROM InfoFiles WHERE FMFilesId = OLD.rowid; END</value>
            </setting>
            <setting name="InsertMissionFile" serializeAs="String">
                <value>INSERT INTO FMFiles (Filename, FileSize, MissionName, ThiefVersion, Author, ReleaseDate, Directory, InstallFolder, Hash) VALUES ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}')</value>
            </setting>
            <setting name="DeleteMissionFile" serializeAs="String">
                <value>DELETE FROM FMFiles WHERE Directory = '{0}' AND Filename = '{1}'</value>
            </setting>
            <setting name="SelectAllFMFiles" serializeAs="String">
                <value>SELECT rowid, Filename, FileSize, MissionName, ThiefVersion, Author, ReleaseDate, Directory, InstallFolder, Hash FROM FMFiles</value>
            </setting>
            <setting name="UpdateFMFiles" serializeAs="String">
                <value>UPDATE FMFiles SET MissionName = '{0}', ThiefVersion = '{1}', Author = '{2}', ReleaseDate = '{3}' WHERE rowid = {4}</value>
            </setting>
            <setting name="SelectFileHash" serializeAs="String">
                <value>SELECT Filename, Hash FROM FMFiles</value>
            </setting>
            <setting name="InsertInfoFile" serializeAs="String">
                <value>INSERT INTO InfoFiles VALUES ('{0}', '{1}', @bytes)</value>
            </setting>
            <setting name="SelectInfoFiles" serializeAs="String">
                <value>SELECT Filename, Content FROM InfoFiles WHERE FMFilesId = {0}</value>
            </setting>
            <setting name="SelectGameFMFiles" serializeAs="String">
                <value>SELECT rowid, Filename, FileSize, MissionName, ThiefVersion, Author, ReleaseDate, Directory, InstallFolder, Hash FROM FMFiles WHERE ThiefVersion = '{0}'</value>
            </setting>
            <setting name="CreateTableUserNotes" serializeAs="String">
                <value>CREATE TABLE IF NOT EXISTS UserNotes (FMFilesId INT NOT NULL PRIMARY KEY, Note TEXT)</value>
            </setting>
            <setting name="SelectUserNotes" serializeAs="String">
                <value>SELECT Note FROM UserNotes WHERE FMFilesId = {0}</value>
            </setting>
        </TFMM.My.MySettings>
    </applicationSettings>
    <userSettings>
        <TFMM.My.MySettings>
            <setting name="UpdateUserNote" serializeAs="String">
                <value>INSERT OR REPLACE INTO UserNotes VALUES ({0}, '{1}')</value>
            </setting>
        </TFMM.My.MySettings>
    </userSettings>
</configuration>
