'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace My
    
    <Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0"),  _
     Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)>  _
    Partial Friend NotInheritable Class MySettings
        Inherits Global.System.Configuration.ApplicationSettingsBase
        
        Private Shared defaultInstance As MySettings = CType(Global.System.Configuration.ApplicationSettingsBase.Synchronized(New MySettings()),MySettings)
        
#Region "My.Settings Auto-Save Functionality"
#If _MyType = "WindowsForms" Then
    Private Shared addedHandler As Boolean

    Private Shared addedHandlerLockObject As New Object

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
    Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
        If My.Application.SaveMySettingsOnExit Then
            My.Settings.Save()
        End If
    End Sub
#End If
#End Region
        
        Public Shared ReadOnly Property [Default]() As MySettings
            Get
                
#If _MyType = "WindowsForms" Then
               If Not addedHandler Then
                    SyncLock addedHandlerLockObject
                        If Not addedHandler Then
                            AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                            addedHandler = True
                        End If
                    End SyncLock
                End If
#End If
                Return defaultInstance
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("CREATE TABLE If NOT EXISTS FMFiles (Filename varchar(255), FileSize INT, MissionN"& _ 
            "ame varchar(255), ThiefVersion varchar(255), Author varchar(255), ReleaseDate DA"& _ 
            "TE, Directory varchar(255), InstallFolder varchar(255), Hash varchar(255))")>  _
        Public ReadOnly Property CreateTableFMFiles() As String
            Get
                Return CType(Me("CreateTableFMFiles"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("CREATE TABLE IF NOT EXISTS InfoFiles (FMFilesId INT, Filename varchar(255), Conte"& _ 
            "nt BLOB)")>  _
        Public ReadOnly Property CreateTableInfoFiles() As String
            Get
                Return CType(Me("CreateTableInfoFiles"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("CREATE TRIGGER IF NOT EXISTS FMDelete AFTER DELETE ON FMFiles FOR EACH ROW BEGIN "& _ 
            "DELETE FROM InfoFiles WHERE FMFilesId = OLD.rowid; END")>  _
        Public ReadOnly Property CreateTriggerFMDelete() As String
            Get
                Return CType(Me("CreateTriggerFMDelete"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO FMFiles (Filename, FileSize, MissionName, ThiefVersion, Author, Relea"& _ 
            "seDate, Directory, InstallFolder, Hash) VALUES ('{0}','{1}','{2}','{3}','{4}','{"& _ 
            "5}','{6}','{7}','{8}')")>  _
        Public ReadOnly Property InsertMissionFile() As String
            Get
                Return CType(Me("InsertMissionFile"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("DELETE FROM FMFiles WHERE Directory = '{0}' AND Filename = '{1}'")>  _
        Public ReadOnly Property DeleteMissionFile() As String
            Get
                Return CType(Me("DeleteMissionFile"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("SELECT rowid, Filename, FileSize, MissionName, ThiefVersion, Author, ReleaseDate,"& _ 
            " Directory, InstallFolder, Hash FROM FMFiles")>  _
        Public ReadOnly Property SelectAllFMFiles() As String
            Get
                Return CType(Me("SelectAllFMFiles"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("UPDATE FMFiles SET MissionName = '{0}', ThiefVersion = '{1}', Author = '{2}', Rel"& _ 
            "easeDate = '{3}' WHERE rowid = {4}")>  _
        Public ReadOnly Property UpdateFMFiles() As String
            Get
                Return CType(Me("UpdateFMFiles"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("SELECT Filename, Hash FROM FMFiles")>  _
        Public ReadOnly Property SelectFileHash() As String
            Get
                Return CType(Me("SelectFileHash"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT INTO InfoFiles VALUES ('{0}', '{1}', @bytes)")>  _
        Public ReadOnly Property InsertInfoFile() As String
            Get
                Return CType(Me("InsertInfoFile"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("SELECT Filename, Content FROM InfoFiles WHERE FMFilesId = {0}")>  _
        Public ReadOnly Property SelectInfoFiles() As String
            Get
                Return CType(Me("SelectInfoFiles"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("SELECT rowid, Filename, FileSize, MissionName, ThiefVersion, Author, ReleaseDate,"& _ 
            " Directory, InstallFolder, Hash FROM FMFiles WHERE ThiefVersion = '{0}'")>  _
        Public ReadOnly Property SelectGameFMFiles() As String
            Get
                Return CType(Me("SelectGameFMFiles"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("CREATE TABLE IF NOT EXISTS UserNotes (FMFilesId INT NOT NULL PRIMARY KEY, Note TE"& _ 
            "XT)")>  _
        Public ReadOnly Property CreateTableUserNotes() As String
            Get
                Return CType(Me("CreateTableUserNotes"),String)
            End Get
        End Property
        
        <Global.System.Configuration.ApplicationScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("SELECT Note FROM UserNotes WHERE FMFilesId = {0}")>  _
        Public ReadOnly Property SelectUserNotes() As String
            Get
                Return CType(Me("SelectUserNotes"),String)
            End Get
        End Property
        
        <Global.System.Configuration.UserScopedSettingAttribute(),  _
         Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.Configuration.DefaultSettingValueAttribute("INSERT OR REPLACE INTO UserNotes VALUES ({0}, '{1}')")>  _
        Public Property UpdateUserNote() As String
            Get
                Return CType(Me("UpdateUserNote"),String)
            End Get
            Set
                Me("UpdateUserNote") = value
            End Set
        End Property
    End Class
End Namespace

Namespace My
    
    <Global.Microsoft.VisualBasic.HideModuleNameAttribute(),  _
     Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute()>  _
    Friend Module MySettingsProperty
        
        <Global.System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")>  _
        Friend ReadOnly Property Settings() As Global.TFMM.My.MySettings
            Get
                Return Global.TFMM.My.MySettings.Default
            End Get
        End Property
    End Module
End Namespace
